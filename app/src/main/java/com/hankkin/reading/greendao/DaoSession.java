package com.hankkin.reading.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hankkin.reading.domain.User;
import com.hankkin.reading.domain.HotBean;
import com.hankkin.reading.domain.TranslateBean;
import com.hankkin.reading.domain.WebExplain;
import com.hankkin.reading.domain.WordNoteBean;

import com.hankkin.reading.greendao.UserDao;
import com.hankkin.reading.greendao.HotBeanDao;
import com.hankkin.reading.greendao.TranslateBeanDao;
import com.hankkin.reading.greendao.WebExplainDao;
import com.hankkin.reading.greendao.WordNoteBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig hotBeanDaoConfig;
    private final DaoConfig translateBeanDaoConfig;
    private final DaoConfig webExplainDaoConfig;
    private final DaoConfig wordNoteBeanDaoConfig;

    private final UserDao userDao;
    private final HotBeanDao hotBeanDao;
    private final TranslateBeanDao translateBeanDao;
    private final WebExplainDao webExplainDao;
    private final WordNoteBeanDao wordNoteBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        hotBeanDaoConfig = daoConfigMap.get(HotBeanDao.class).clone();
        hotBeanDaoConfig.initIdentityScope(type);

        translateBeanDaoConfig = daoConfigMap.get(TranslateBeanDao.class).clone();
        translateBeanDaoConfig.initIdentityScope(type);

        webExplainDaoConfig = daoConfigMap.get(WebExplainDao.class).clone();
        webExplainDaoConfig.initIdentityScope(type);

        wordNoteBeanDaoConfig = daoConfigMap.get(WordNoteBeanDao.class).clone();
        wordNoteBeanDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        hotBeanDao = new HotBeanDao(hotBeanDaoConfig, this);
        translateBeanDao = new TranslateBeanDao(translateBeanDaoConfig, this);
        webExplainDao = new WebExplainDao(webExplainDaoConfig, this);
        wordNoteBeanDao = new WordNoteBeanDao(wordNoteBeanDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(HotBean.class, hotBeanDao);
        registerDao(TranslateBean.class, translateBeanDao);
        registerDao(WebExplain.class, webExplainDao);
        registerDao(WordNoteBean.class, wordNoteBeanDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        hotBeanDaoConfig.clearIdentityScope();
        translateBeanDaoConfig.clearIdentityScope();
        webExplainDaoConfig.clearIdentityScope();
        wordNoteBeanDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public HotBeanDao getHotBeanDao() {
        return hotBeanDao;
    }

    public TranslateBeanDao getTranslateBeanDao() {
        return translateBeanDao;
    }

    public WebExplainDao getWebExplainDao() {
        return webExplainDao;
    }

    public WordNoteBeanDao getWordNoteBeanDao() {
        return wordNoteBeanDao;
    }

}
